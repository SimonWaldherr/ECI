/*!
\page eci_macros ECI Macros
This page details macros intended to be defined in 'eci_interface.h' or
any file in the include tree. Each macro specifies whether it is required
for operation of the ECI. Failure to specify a macro will lead to a compilation
error. These macros serve as a means to define the behavior of the ECI.

\section func_macros Function Macros
<table>
<tr><th> Required <th> Macro <th> Description
<tr><td style="text-align:center"> \checkmark <td> ECI_APP_MAIN
    <td> Name of the main function. Serves as an entry point for the ECI.
<tr><td style="text-align:center"> \cross <td> ECI_FUNC_CODE_START
    <td> ??
<tr><td style="text-align:center"> \cross <td> ECI_FUNC_CODE_END
    <td> ??
</table>

\section info_macros Information Macros
<table>
<tr><th> Required <th> Macro <th> Description
<tr><td style="text-align:center">\checkmark<td> ECI_APP_REVISION_NUMBER
  <td> Version number to be used in event messages.
<tr><td style="text-align:center">\checkmark<td> ECI_APP_NAME_UPPER
  <td> Name of the app in upper case.
<tr><td style="text-align:center">\checkmark<td> ECI_APP_NAME_LOWER
  <td> Name of the app in lower case.
<tr><td style="text-align:center">\checkmark<td> ECI_CMD_PIPE_NAME
  <td> Name of the app's command pipe. The command pipe is used
to receive software bus command messages. <br>This value must be unique across all apps.
<tr><td style="text-align:center">\checkmark<td> ECI_DATA_PIPE_NAME
  <td> Name of the app's telemetry pipe. <br>This value must be
unique across all apps.
</table>

\section tbl_macros Table Macros
<table>
<tr><th>Required <th> Macro <th> Description
<tr><td style="text-align:center">\cross<td> ECI_PARAM_TBL_DEFINED
  <td> Indicates the app requires a flight software parameter table. <br>
    If this is defined, ECI will expect an array of ECI_Tbl_t objects with the name <br>
    'ECI_ParamTable' to be declared.
<tr><td style="text-align:center">\cross<td> ECI_STATE_TBL_DEFINED
  <td> Indicates the app is intending to use a state table. <br>
    Declaring this macro also requires defining:
    <table>
    <tr><th> Macro <th> Description
    <tr><td> ECI_STATE_TABLE_NAME <td> Name of the registered state table.
    <tr><td> ECI_STATE_TABLE      <td> Name of the declared structure in the associated .tbl file.
    </table>
<tr><td style="text-align:center">\cross<td> ECI_CDS_TABLE_DEFINED
  <td> Indicates this app uses the critical data store.
<tr><td style="text-align:center">\cross<td> ECI_EVENT_TABLE_DEFINED
  <td> Indicates this app wishes to output events to CFE event services. <br>
    If this is defined, ECI will expect an array of ECI_Evs_t objects with the name <br>
    'ECI_Events' to be declared.
<tr><td style="text-align:center">\cross<td> ECI_FLAG_TABLE_DEFINED
  <td> Indicates this app wants to trigger FDC messages. <br>
    If this is defined, ECI will expect an array of ECI_Flag_t objects with the name <br>
    'ECI_Flags' to be defined.
</table>

\section mid_macros Message ID Macros
Each one of these message IDs are unique across all apps including the CFE core and
extra care should be taken to avoid collisions. A message ID collision is difficult
to diagnose but can usually be found by strange commands or telemetry being relayed
to event services.

According to the CCSDS standard, message IDs should be represented by 8 byte integers.
Commonly these IDs are written as hex values (ie. 0xAAAA) even though any value that
fits within those 8 bytes will be valid. The 4th bit (0b...[0|1]) represents the type of
message the ID is associated with; 0 being telemetry and 1 being a command. In the table
below, we've identified each macro's internal type with either TLM or CMD accordingly.
ECI expects that every MID that uses the command bit requires an additional buffer to store
the incoming command. A third distinction will be made in this table for performance IDs
which will be denoted by PERF. Performance IDs are used to track an apps system usage but
aren't reference in the CCSDS standard.
The CCSDS standard can be referenced [here](https://public.ccsds.org/Pubs/133x0b1c2.pdf).

<table>
<tr><th> Required <th> Macro <th> Type <th> Description
<tr><td style="text-align:center">\checkmark<td> ECI_CMD_MID
  <td style="text-align:center">CMD
  <td> Standard command message ID. This command ID is used for NOOP and the
    house keeping command.
<tr><td style="text-align:center">\cross<td> ECI_FLAG_MID
  <td style="text-align:center">TLM
  <td> Used by FDC to retrieve an apps flags to which the ECI will respond with
    the state of the registered flags. Only required if ECI_FLAG_TABLE_DEFINED is
    defined.
<tr><td style="text-align:center">\checkmark<td> ECI_HK_MID
  <td style="text-align:center">TLM
  <td> ID indicating the app's house keeping message.
<tr><td style="text-align:center">\checkmark<td> ECI_PERF_ID
  <td style="text-align:center">PERF
  <td> ID to track the performance of the app. This ID will be used before
    and after the run loop once the ECI recieves the app's tick message.
<tr><td style="text-align:center">\checkmark<td> ECI_SEND_HK_MID
  <td style="text-align:center">TLM
  <td> Opens a channel for hk to request new house keeping information.
<tr><td style="text-align:center">\checkmark<td> ECI_TICK_MID
  <td style="text-align:center">TLM
  <td> Allows the ECI to trigger an iteration of the run loop. This message
    will usually come from the scheduler or a data source. If your app is not
    running, check to see if this message has been included in your scheduler
    app.
<tr><td style="text-align:center">\checkmark<td> ECI_TBL_MANAGE_MID
  <td style="text-align:center">TLM
  <td> Alerts the ECI to changes in table services. This message ID will trigger
    a table load and update all state/param information accordingly.
</table>

*/
